knitr::opts_knit$set(root.dir = normalizePath("/Users/talhaaccount/Desktop/Qbio_490_R/qbio_490_talha/week4_clinical/"))
knitr::opts_knit$set(root.dir = normalizePath("/Users/talhaaccount/Desktop/Qbio_490_R/qbio_490_talha/analysis_data/"))
knitr::opts_knit$set(root.dir = normalizePath("/Users/talhaaccount/Desktop/Qbio_490_R/qbio_490_talha/analysis_data/"))
library(BiocManager)
library(TCGAbiolinks)
?GDCquery()
clinical_query <- GDCquery(project = "TCGA-BRCA", data.category = "Clinical", file.type = "xml"   )
GDCdownload(clinical_query) # ONLY RUN THIS ONCE! it is very slow
clinical <- GDCprepare_clinic(clinical_query, clinical.info = "patient")
str(clinical)
head(clinical)
nrow(clinical)
ncol(clinical)
typeof(clinical$gender)
clinical$age_at_initial_pathologic_diagnosis[5]
head(clinical)
(clinical$age_at_initial_pathologic_diagnosis[1]) - (clinical$days_to_last_followup[1])
(clinical$age_at_initial_pathologic_diagnosis[1]) - ((clinical$days_to_last_followup[1]/365))
(clinical$age_at_initial_pathologic_diagnosis[1]) - (((clinical$days_to_last_followup[1])/365))
knitr::opts_knit$set(root.dir = normalizePath("/Users/talhaaccount/Desktop/Qbio_490_R/qbio_490_talha/analysis_data/"))
# load in packages
library(BiocManager)
library(TCGAbiolinks)
clinical_query <- GDCquery(project = "TCGA-BRCA", data.category = "Clinical", file.type = "xml")
clinical <- GDCprepare_clinic(clinical_query, clinical.info = "patient") #into data fram
# write code here
min(clinical$age_at_initial_pathologic_diagnosis)
# write code here
min(clinical$age_at_initial_pathologic_diagnosis)
max(clinical$age_at_initial_pathologic_diagnosis)
mean(clinical$age_at_initial_pathologic_diagnosis)
median(clinical$age_at_initial_pathologic_diagnosis)
summary(clinical$age_at_initial_pathologic_diagnosis)
# write code here
# Create a column in clinical called age_category
# If < 50 then young, if > 50 then old
clinical$age_category <- ifelse(clinical$age_at_initial_pathologic_diagnosis >= 50, "young","old")
# write code here
# Create a column in clinical called age_category
# If < 50 then young, if > 50 then old
clinical$age_category <- ifelse(clinical$age_at_initial_pathologic_diagnosis >= 50, "young","old")
clinical
# write code here
# Create a column in clinical called age_category
# If < 50 then young, if > 50 then old
clinical$age_category <- ifelse(clinical$age_at_initial_pathologic_diagnosis >= 50, "young","old")
clinical$age_category
# write code here
# Create a column in clinical called age_category
# If < 50 then young, if > 50 then old
clinical$age_category <- ifelse(clinical$age_at_initial_pathologic_diagnosis >= 50, "old","young")
clinical$age_category
age_mask <- ifelse(clinical$age_at_initial_pathologic_diagnosis >= 50, TRUE, FALSE)
age_mask <- ifelse(clinical$age_at_initial_pathologic_diagnosis >= 50, TRUE, FALSE)
clinical$age_mask
age_mask <- ifelse(clinical$age_at_initial_pathologic_diagnosis >= 50, TRUE, FALSE)
age_mask
# write code here
Sum(age_mask)
# write code here
sum(age_mask)
young_clinical <- clinical[age_mask, ]
young_clinical <- clinical[age_mask, ]
young_clinical
old_clinical <- clinical[ , !(age_mask)]
young_clinical <- clinical[age_mask, ]
young_clinical
View(young_clinical)
age_mask <- ifelse(clinical$age_at_initial_pathologic_diagnosis >= 50, FALSE, TRUE)
age_mask <- ifelse(clinical$age_at_initial_pathologic_diagnosis >= 50, FALSE, TRUE)
# write code here
sum(age_mask)
young_clinical <- clinical[age_mask, ]
young_clinical
old_clinical <- clinical[ , !age_mask]
old_clinical <- clinical[!age_mask,]
old_clinical <- clinical[!age_mask,]
old clinical
old_clinical <- clinical[!age_mask,]
old_clinical
old_clinical <- clinical[!age_mask,]
old_clinical
nrows(clinical) == nrow(old_clinical + young_clinical)
nrows(clinical) == nrows(old_clinical + young_clinical)
nrows(clinical) == nrows(old_clinical) + nrows(young_clinical)
nrows(clinical)
nrow(clinical) == nrow(old_clinical) + nrow(young_clinical)
# install and load packages
library(survival)
library(survminer)
# install and load packages
library(survival)
install.packages("survminer")
library(survminer)
# install and load packages
library(survival)
install.packages("survminer")
library(survminer)
install.packages("survminer")
knitr::opts_knit$set(root.dir = normalizePath("/var/folders/42/015qqrg96q38d9c1311cml_h0000gn/T//RtmpnQKGaw/downloaded_packages"))
# install and load packages
library(survival)
install.packages("survminer")
library(survminer)
knitr::opts_knit$set(root.dir = normalizePath("/Users/talhaaccount/Desktop/Qbio_490_R/qbio_490_talha/analysis_data/"))
# install and load packages
library(survival)
install.packages("survminer")
library(survminer)
install.packages("ggplot2")
library("ggplot2")
knitr::opts_knit$set(root.dir = normalizePath("/var/folders/42/015qqrg96q38d9c1311cml_h0000gn/T//RtmpnQKGaw/downloaded_packages"))
# install and load packages
library(survival)
install.packages("survminer")
library(survminer)
install.packages("ggplot2")
library("ggplot2")
install.packages("ggplot2")
library(survival)
library(survminer)
library(survMisc)
library(KMsurv)
knitr::opts_knit$set(root.dir = normalizePath("/Users/talhaaccount/Desktop/Qbio_490_R/qbio_490_talha/analysis_data/"))
# write code here
# HINT: use ifelse() and is.na()
clinical$survival_time <- ifelse(is.na(clinical$days_to_death), clinical$days_to_last_followup, clinical$days_to_death)
# write code here
clinical$death_event <- ifelse(!is.na(clinical$vital_status),TRUE,FALSE)
# write code here
# HINT: use ifelse() and is.na()
clinical$survival_time <- ifelse(is.na(clinical$days_to_death), clinical$days_to_death,clinical$days_to_last_followup)
# write code here
# HINT: use ifelse() and is.na()
clinical$survival_time <- ifelse(is.na(clinical$days_to_death), clinical$days_to_death,clinical$days_to_last_followup)
# Initialize a 'survival' object, which contains the data we need.
?Surv
surv_object_age <- Surv(time = FILL_IN_HERE,
event = FILL_IN_HERE)
# Initialize a 'survival' object, which contains the data we need.
?Surv
surv_object_age <- Surv(time = survival_time,
event = death_event)
# Initialize a 'survival' object, which contains the data we need.
?Surv
surv_object_age <- Surv(time = clinical$survival_time,
event = clinical$death_event)
# Create a fit object
# When writing formulas (x ~ y), x is what's being plotted and y is what is grouping x into categories
?surv_fit
age_fit <- surv_fit( surv_object ~ FILL_IN_HERE,
data = clinical )
# Initialize a 'survival' object, which contains the data we need.
?Surv
surv_object_age <- Surv(time = clinical$survival_time,
event = clinical$death_event)
# Create a fit object
# When writing formulas (x ~ y), x is what's being plotted and y is what is grouping x into categories
?surv_fit
age_fit <- surv_fit( surv_object ~ FILL_IN_HERE,
data = clinical )
# Initialize a 'survival' object, which contains the data we need.
?Surv
surv_object_age <- Surv(time = clinical$survival_time,
event = clinical$death_event)
# Create a fit object
# When writing formulas (x ~ y), x is what's being plotted and y is what is grouping x into categories
?surv_fit
age_fit <- surv_fit( surv_object_age ~ clinical$age_category,
data = clinical )
# Initialize a 'survival' object, which contains the data we need.
?Surv
surv_object_age <- Surv(time = clinical$survival_time,
event = clinical$death_event)
# Create a fit object
# When writing formulas (x ~ y), x is what's being plotted and y is what is grouping x into categories
?surv_fit
age_fit <- surv_fit( surv_object_age ~ clinical$age_category,
data = clinical )
# Initialize a 'survival' object, which contains the data we need.
?Surv
surv_object_age <- Surv(time = clinical$survival_time,
event = clinical$death_event)
# Create a fit object
# When writing formulas (x ~ y), x is what's being plotted and y is what is grouping x into categories
?surv_fit
age_fit <- surv_fit( surv_object_age ~ clinical$age_category,
data = clinical )
# write code here
clinical$death_event <- ifelse(!is.na(clinical$vital_status),FALSE,TRUE)
# Initialize a 'survival' object, which contains the data we need.
?Surv
surv_object_age <- Surv(time = clinical$survival_time,
event = clinical$death_event)
# Create a fit object
# When writing formulas (x ~ y), x is what's being plotted and y is what is grouping x into categories
?surv_fit
age_fit <- surv_fit( surv_object_age ~ clinical$age_category,
data = clinical )
# write code here
clinical$death_event <- ifelse(!is.na(clinical$vital_status),TRUE,FALSE)
# Initialize a 'survival' object, which contains the data we need.
?Surv
surv_object_age <- Surv(time = clinical$survival_time,
event = clinical$death_event)
# Create a fit object
# When writing formulas (x ~ y), x is what's being plotted and y is what is grouping x into categories
?surv_fit
age_fit <- surv_fit( surv_object_age ~ clinical$age_category,
data = clinical )
detach("package:survival", unload = TRUE)
detach("package:survminer", unload = TRUE)
detach("package:survMisc", unload = TRUE)
detach("package:KMsurv", unload = TRUE)
library(survminer)
library(survival)
library(survMisc)
library(KMsurv)
# Initialize a 'survival' object, which contains the data we need.
?Surv
surv_object_age <- Surv(time = clinical$survival_time,
event = clinical$death_event)
# Create a fit object
# When writing formulas (x ~ y), x is what's being plotted and y is what is grouping x into categories
?surv_fit
age_fit <- surv_fit( surv_object_age ~ clinical$age_category,
data = clinical )
# write code here
# Create a column in clinical called age_category
# If < 50 then young, if > 50 then old
clinical$age_category <- ifelse(clinical$age_at_initial_pathologic_diagnosis >= 50, "old","young")
clinical$age_category
age_mask <- ifelse(clinical$age_at_initial_pathologic_diagnosis >= 50, FALSE, TRUE)
age_mask <- ifelse(clinical$age_at_initial_pathologic_diagnosis >= 50, FALSE, TRUE)
age_mask
knitr::opts_knit$set(root.dir = normalizePath("/Users/talhaaccount/Desktop/Qbio_490_R/qbio_490_talha/analysis_data/"))
# load in packages
library(BiocManager)
library(TCGAbiolinks)
clinical_query <- GDCquery(project = "TCGA-BRCA", data.category = "Clinical", file.type = "xml")
clinical <- GDCprepare_clinic(clinical_query, clinical.info = "patient") #into data fram
# write code here
min(clinical$age_at_initial_pathologic_diagnosis)
max(clinical$age_at_initial_pathologic_diagnosis)
mean(clinical$age_at_initial_pathologic_diagnosis)
median(clinical$age_at_initial_pathologic_diagnosis)
summary(clinical$age_at_initial_pathologic_diagnosis)
# write code here
# Create a column in clinical called age_category
# If < 50 then young, if > 50 then old
clinical$age_category <- ifelse(clinical$age_at_initial_pathologic_diagnosis >= 50, "old","young")
clinical$age_category
age_mask <- ifelse(clinical$age_at_initial_pathologic_diagnosis >= 50, FALSE, TRUE)
# write code here
sum(age_mask)
young_clinical <- clinical[age_mask, ]
young_clinical
old_clinical <- clinical[!age_mask,]
old_clinical
nrow(clinical) == nrow(old_clinical) + nrow(young_clinical)
# install and load packages
library(survival)
install.packages("survminer")
library(survminer)
install.packages("ggplot2")
library("ggplot2")
# write code here
# HINT: use ifelse() and is.na()
clinical$survival_time <- ifelse(is.na(clinical$days_to_death), clinical$days_to_death,clinical$days_to_last_followup)
# write code here
clinical$death_event <- ifelse(!is.na(clinical$vital_status),TRUE,FALSE)
# Initialize a 'survival' object, which contains the data we need.
?Surv
surv_object_age <- Surv(time = clinical$survival_time,
event = clinical$death_event)
# Create a fit object
# When writing formulas (x ~ y), x is what's being plotted and y is what is grouping x into categories
?surv_fit
age_fit <- surv_fit( surv_object_age ~ clinical$age_category,
data = clinical )
# Initialize a 'survival' object, which contains the data we need.
?Surv
surv_object_age <- Surv(time = clinical$survival_time,
event = clinical$death_event)
# Create a fit object
# When writing formulas (x ~ y), x is what's being plotted and y is what is grouping x into categories
?surv_fit
age_fit <- surv_fit( surv_object_age ~ clinical$age_category,
data = clinical )
age_mask <- ifelse(clinical$age_at_initial_pathologic_diagnosis >= 50, FALSE, TRUE)
age_mask <- ifelse(clinical$age_at_initial_pathologic_diagnosis >= 50, FALSE, TRUE)
age_mask
# write code here
# Create a column in clinical called age_category
# If < 50 then young, if > 50 then old
clinical$age_category <- ifelse(clinical$age_at_initial_pathologic_diagnosis >= 50, "old","young")
clinical$age_category
clinical
age_mask <- ifelse(clinical$age_at_initial_pathologic_diagnosis >= 50, FALSE, TRUE)
age_mask
young_clinical <- clinical[age_mask, ]
young_clinical
old_clinical <- clinical[!age_mask,]
old_clinical
nrow(clinical) == nrow(old_clinical) + nrow(young_clinical)
# install and load packages
library(survival)
install.packages("survminer")
library(survminer)
install.packages("ggplot2")
library("ggplot2")
install.packages("survminer")
library(survival)
library(survminer)
library(survMisc)
knitr::opts_knit$set(root.dir = normalizePath("/Users/talhaaccount/Desktop/Qbio_490_R/qbio_490_talha/analysis_data/"))
# write code here
# HINT: use ifelse() and is.na()
clinical$survival_time <- ifelse(is.na(clinical$days_to_death), clinical$days_to_death,clinical$days_to_last_followup)
# write code here
clinical$death_event <- ifelse(!is.na(clinical$vital_status),TRUE,FALSE)
# Initialize a 'survival' object, which contains the data we need.
?Surv
surv_object_age <- Surv(time = clinical$survival_time,
event = clinical$death_event)
# Create a fit object
# When writing formulas (x ~ y), x is what's being plotted and y is what is grouping x into categories
?surv_fit
age_fit <- surv_fit( surv_object_age ~ clinical$age_category,
data = clinical )
# Initialize a 'survival' object, which contains the data we need.
?Surv
surv_object_age <- Surv(time = clinical$survival_time,
event = clinical$death_event)
# Create a fit object
# When writing formulas (x ~ y), x is what's being plotted and y is what is grouping x into categories
?surv_fit
age_fit <- surv_fit( surv_object_age ~ clinical$age_category,
data = clinical )
# Initialize a 'survival' object, which contains the data we need.
?Surv
surv_object_age <- Surv(time = clinical$survival_time,
event = clinical$death_event)
# Create a fit object
# When writing formulas (x ~ y), x is what's being plotted and y is what is grouping x into categories
?surv_fit
age_fit <- surv_fit( surv_object_age ~ clinical$age_category,
data = clinical )
# write code here
clinical$death_event <- ifelse(!is.na(clinical$vital_status),TRUE,FALSE)
vital_status
# write code here
clinical$death_event <- ifelse(!is.na(clinical$vital_status),TRUE,FALSE)
clinical$vital_status
# Initialize a 'survival' object, which contains the data we need.
?Surv
surv_object_age <- Surv(time = clinical$survival_time,
event = clinical$death_event)
# Create a fit object
# When writing formulas (x ~ y), x is what's being plotted and y is what is grouping x into categories
?surv_fit
age_fit <- surv_fit( surv_object_age ~ clinical$age_category,
data = clinical )
# Initialize a 'survival' object, which contains the data we need.
?Surv
surv_object_age <- Surv(time = clinical$survival_time,
event = clinical$death_event)
# Create a fit object
# When writing formulas (x ~ y), x is what's being plotted and y is what is grouping x into categories
?surv_fit
age_fit <- surv_fit( surv_object_age ~ clinical$age_category,
data = clinical )
# write code here
# HINT: use ifelse() and is.na()
clinical$survival_time <- ifelse(is.na(clinical$days_to_death), clinical$days_to_last_followup)
# write code here
# HINT: use ifelse() and is.na()
clinical$survival_time <- ifelse(is.na(clinical$days_to_death), clinical$days_to_last_followup, clinical$days_to_death)
# write code here
clinical$death_event <- ifelse(!is.na(clinical$vital_status),TRUE,FALSE)
# Initialize a 'survival' object, which contains the data we need.
?Surv
surv_object_age <- Surv(time = clinical$survival_time,
event = clinical$death_event)
# Create a fit object
# When writing formulas (x ~ y), x is what's being plotted and y is what is grouping x into categories
?surv_fit
age_fit <- surv_fit( surv_object_age ~ clinical$age_category,
data = clinical )
# the ggtheme and legend arguments are for formatting.
# Feel free to play around with the margins and legend placement
?ggsurvplot
survplot_age = ggsurvplot(age_fit,
pval=TRUE,
ggtheme = theme(plot.margin = unit(c(1,1,1,1), "cm")),
legend = "right")
# when you create plots on your own, be sure to name them descriptively
KM_plot_age = survplot_age$plot +
theme_bw() +  # changes the appearance to be a bit prettier
theme(axis.title = element_text(size=20), # increase font sizes
axis.text = element_text(size=16),
legend.title = element_text(size=14),
legend.text = element_text(size=12))
KM_plot_age
# change the file path! make sure it's in your week4 folder
# we set row.names to false since the first row doesn't contain row name info
write.csv(clinical, "/Users/talhaaccount/Desktop/Qbio_490_R/qbio_490_talha/week4_clinical/brca_clinical_data.csv", row.names = FALSE)
